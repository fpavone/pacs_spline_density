% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/splineDensity.R
\name{smoothSplines}
\alias{smoothSplines}
\title{Estimate density from histogram}
\usage{
smoothSplines(k, l, alpha, data, xcp, knots, num_points = 100,
  prior = "default", cores = 1, fast = 0)
}
\arguments{
\item{k}{smoothing splines degree}

\item{l}{order of derivative in the penalization term}

\item{alpha}{weight for penalization}

\item{data}{an object of class "matrix" containing data to be smoothed, row by row}

\item{xcp}{vector of control points}

\item{knots}{either vector of knots for the splines or a integer for the number of equispaced knots}

\item{num_points}{number of points of the grid where to evaluate the density estimated}

\item{prior}{prior used for zero-replacements. This must be one of "perks", "jeffreys", "bayes_laplace", "sq" or "default"}

\item{cores}{number of cores for parallel execution, if the option was enabled before installing the package}

\item{fast}{1 if maximal performance is required (print statements suppressed), 0 otherwise}
}
\value{
An object of class \code{smoothSpl}, containing among the other the following variables:
\item{\code{bspline}}{each row is the vector of B-spline coefficients}
\item{\code{Y}}{the values of the smoothed curve, for the grid given}
\item{\code{Y_clr}}{the values of the smoothed curve, in the clr setting, for the grid given}
}
\description{
Given raw (discretized) distributional observations, \code{smoothSplines} computes the density
function that 'best' fits data, in a trade-off between smooth and least squares approximation, using B-spline basis functions.
}
\details{
The original discretized densities are not directly smoothed, but instead the centred logratio transformation is
first applied, to deal with the unit integral constraint related to density functions. \cr
Then the constrained variational problem is set. This minimization problem for the optimal 
density is a compromise between staying close to the given data, at the corresponding \code{xcp},
and obtaining a smooth function.
The non-smoothness measure takes into account the \code{l}th derivative, while the fidelity term is weigthed by \code{alpha}. \cr
The solution is a natural spline. The vector of its coefficients is obtained by the minimum norm solution of a linear system.
The resulting splines can be either back-transformed to the original Bayes space of density
functions (in order to provide their smoothed counterparts for vizualization and interpretation
purposes), or retained for further statistical analysis in the clr space.
}
\examples{
data(particle)
x_cp <- c(0.063,0.125,0.25,0.5,1,2,4,8,16,31.5,63,100)
u <- log(0.001)
v <- log(200)
classes <- c(u,log(x_cp))
midx <- (classes[-1] + classes[-13])/2
lenx <- (classes[-1] - classes[-13])/2
midy <- adata/lenx
aknots <- seq(midx[1],midx[12], length = 7)
sol <- smoothSplines(k=3,l=2,alpha=10,midy/100,midx,aknots)
plot(sol)
}
\references{
J. Machalova, K. Hron & G.S. Monti (2016): 
Preprocessing of centred logratio transformed density functions 
using smoothing splines. Journal of Applied Statistics, 43:8, 1419-1435.
}
